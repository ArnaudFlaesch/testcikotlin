buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven { url 'https://jitpack.io' }
		maven { url 'http://repo.typesafe.com/typesafe/releases/com/typesafe/netty/netty-http-pipelining/'}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

plugins {
	id 'net.saliman.cobertura' version '2.6.1'
	id 'com.github.kt3k.coveralls' version '2.8.2'
	id "io.github.ddimtirov.codacy" version "0.1.0"
}

cobertura.coverageFormats = ['html', 'xml']

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

coveralls {
    sourceDirs += ['src/main/kotlin']
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nono'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://jitpack.io' }
	maven { url 'http://repo.typesafe.com/typesafe/releases/com/typesafe/netty/netty-http-pipelining/'}
    	maven { url "http://dl.bintray.com/typesafe/maven-releases" }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile "org.jetbrains.kotlin:kotlin-reflect"
	compile 'com.h2database:h2'
	
	//Junit 5
	testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
	testCompile 'io.rest-assured:rest-assured:3.3.0'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
	useJUnitPlatform()
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
	main = "com.codacy.CodacyCoverageReporter"
	classpath = configurations.codacy
	args = [
			"report",
			"-l",
			"Java",
			"-r",
			"${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	]
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
